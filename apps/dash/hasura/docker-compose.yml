version: '3.6'
name: dash-hasura
services:
  postgres:
    image: postgres:15
    restart: on-failure
    container_name: dash-hasura-graphql-engine-postgres
    volumes:
      - db_dash-hasura:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
  graphql-engine:
    image: hasura/graphql-engine:v2.32.1
    ports:
      - ${HASURA_PORT}:8080
    depends_on:
      postgres:
        condition: service_healthy
    container_name: dash-hasura-graphql-engine
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/healthz']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 2s
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'false'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "${JWT_SECRET}" }'
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: naming_convention
      HASURA_BACKEND_BASE_URL: ${HASURA_BACKEND_BASE_URL}
      HASURA_AUTH_TOKEN_CRON: ${HASURA_AUTH_TOKEN_CRON}
volumes:
  db_dash-hasura: {}
